/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CarmelRegistry2,
  CarmelRegistry2Interface,
} from "../../contracts/CarmelRegistry2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sysmeta0",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sysmeta1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "umeta0",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "umeta1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "group",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "total_keys",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "total_addresses",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
    ],
    name: "addAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "k",
        type: "uint256[2]",
      },
    ],
    name: "addKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "keyId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "command",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "authData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
      {
        internalType: "uint256[2]",
        name: "signature",
        type: "uint256[2]",
      },
    ],
    name: "authenticate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "grp",
        type: "bytes32",
      },
    ],
    name: "getGroup",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "username",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "sysmeta0",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "sysmeta1",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "umeta0",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "umeta1",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "group",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "total_keys",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "total_addresses",
            type: "uint32",
          },
        ],
        internalType: "struct CarmelRegistry2.Account[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keys_x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keys_y",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "perms",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "grp",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "k",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "sh",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "uh",
        type: "bytes32[2]",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "grp",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "sh",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "uh",
        type: "bytes32[2]",
      },
    ],
    name: "registerRaw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total_accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "username",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "sh",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes32[2]",
        name: "uh",
        type: "bytes32[2]",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "updatePerms",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usernames",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611bc3806100d96000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063b567d4ba11610071578063b567d4ba14610212578063b76b70d514610232578063bc529c431461025d578063d5d376581461030e578063f554d1291461032157600080fd5b80638129fc1c146101af57806398ebbd3c146101b75780639d51aff3146101ca578063b409ea4e146101dd57600080fd5b806354fd4d50116100de57806354fd4d501461017157806356d9815a1461018057806357a12ae51461019357806377cdfa98146101a657600080fd5b806316aac50e146101105780631c44be571461012557806333be6358146101385780634aba00581461014b575b600080fd5b61012361011e366004611451565b610344565b005b610123610133366004611527565b6103af565b610123610146366004611565565b6104b7565b61015e6101593660046115be565b61071c565b6040519081526020015b60405180910390f35b60405160028152602001610168565b61015e61018e3660046115be565b61074d565b6101236101a13660046115e0565b610769565b61015e60005481565b6101236108be565b61015e6101c53660046115be565b6109de565b6101236101d836600461160a565b6109fa565b6102006101eb366004611637565b60016020526000908152604090205460ff1681565b60405160ff9091168152602001610168565b610225610220366004611659565b610b4b565b6040516101689190611672565b6102456102403660046115be565b610d1d565b6040516001600160a01b039091168152602001610168565b6102c161026b366004611659565b60026020819052600091825260409091208054600182015492820154600383015460048401546005850154600686015460079096015494969593949293919290919063ffffffff80821691600160201b90041689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015263ffffffff90811660e08401521661010082015261012001610168565b61012361031c366004611711565b610d55565b61033461032f366004611801565b611016565b6040519015158152602001610168565b3360009081526001602052604090205460fa60ff90911610156103825760405162461bcd60e51b8152600401610379906118c1565b60405180910390fd5b6001600160a01b03919091166000908152600160205260409020805460ff191660ff909216919091179055565b3360009081526001602052604090205460fa60ff90911610156103e45760405162461bcd60e51b8152600401610379906118c1565b60008381526002602081815260409283902083516101208101855281548152600182015492810183905292810154938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260079092015463ffffffff80821660e0840152600160201b90910416610100820152906104805760405162461bcd60e51b8152600401610379906118ef565b5081516000938452600260208181526040909520908101919091559183015160038301558051600483015590910151600590910155565b3360009081526001602052604090205460fa60ff90911610156104ec5760405162461bcd60e51b8152600401610379906118c1565b60008381526002602081815260409283902083516101208101855281548152600182015492810183905292810154938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260079092015463ffffffff80821660e0840152600160201b9091041661010082015290156105b95760405162461bcd60e51b815260206004820152601b60248201527f54686520757365726e616d6520616c72656164792065786973747300000000006044820152606401610379565b604080516101208101825260008054825260208083018890528651938301939093529185015160608201528351608082015260a0810184600160209081029190910151825281810189905260006040808401829052600160609485018190528a835260028085528284208751815587860151818401558784015191810191909155948601516003808701919091556080870151600487015560a0870151600587015560c087015160068088019190915560e0880151600790970180546101008a015163ffffffff908116600160201b0267ffffffffffffffff1990921699169890981797909717909655948452818320805480830182559084528484200180546001600160a01b038f166001600160a01b031990911681179091558c845294845281832080548083018255908452848420018b905593825291839052908120805460ff191683179055549192506107109190611952565b60005550505050505050565b6004602052816000526040600020818154811061073857600080fd5b90600052602060002001600091509150505481565b6003602052816000526040600020818154811061073857600080fd5b3360009081526001602052604090205460fa60ff909116101561079e5760405162461bcd60e51b8152600401610379906118c1565b60008181526002602081815260409283902083516101208101855281548152600182015492810183905292810154938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260079092015463ffffffff80821660e0840152600160201b909104166101008201529061083a5760405162461bcd60e51b8152600401610379906118ef565b60008281526006602090815260408220805460018082018355918452919092200180546001600160a01b0319166001600160a01b0386161790556101008201516108839161196b565b600092835260026020526040909220600701805463ffffffff93909316600160201b0267ffffffff0000000019909316929092179091555050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156109045750825b905060008267ffffffffffffffff1660011480156109215750303b155b90508115801561092f575080155b1561094d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561097757845460ff60401b1916600160401b1785555b336000908152600160205260409020805460ff191660fa17905583156109d757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b6005602052816000526040600020818154811061073857600080fd5b3360009081526001602052604090205460fa60ff9091161015610a2f5760405162461bcd60e51b8152600401610379906118c1565b60008281526002602081815260409283902083516101208101855281548152600182015492810183905292810154938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260079092015463ffffffff80821660e0840152600160201b9091041661010082015290610acb5760405162461bcd60e51b8152600401610379906118ef565b600083815260046020908152604080832085518154600180820184559286528486200155868452600583529083208583015181548084018355918552929093209092015560e0820151610b1d9161196b565b600093845260026020526040909320600701805463ffffffff191663ffffffff909416939093179092555050565b6000818152600360209081526040808320805482518185028101850190935280835260609493830182828015610ba057602002820191906000526020600020905b815481526020019060010190808311610b8c575b5050505050905060008151905060008167ffffffffffffffff811115610bc857610bc861148e565b604051908082528060200260200182016040528015610c3f57816020015b604080516101208101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201528252600019909201910181610be65790505b50905060005b82811015610d145760026000858381518110610c6357610c63611926565b6020908102919091018101518252818101929092526040908101600020815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015463ffffffff80821660e0840152600160201b909104166101008201528251839083908110610d0157610d01611926565b6020908102919091010152600101610c45565b50949350505050565b60066020528160005260406000208181548110610d3957600080fd5b6000918252602090912001546001600160a01b03169150829050565b3360009081526001602052604090205460fa60ff9091161015610d8a5760405162461bcd60e51b8152600401610379906118c1565b60008481526002602081815260409283902083516101208101855281548152600182015492810183905292810154938301939093526003830154606083015260048301546080830152600583015460a0830152600683015460c083015260079092015463ffffffff80821660e0840152600160201b909104166101008201529015610e575760405162461bcd60e51b815260206004820152601b60248201527f54686520757365726e616d6520616c72656164792065786973747300000000006044820152606401610379565b604080516101208101825260008054825260208083018990528651938301939093529185015160608201528351608082015260a081018460016020908102919091015182528181018a905260016040808401829052606093840182905260008b815260028085528282208751815587860151948101949094558683015190840155938501516003830155608085015160048084019190915560a0860151600584015560c0860151600684015560e08601516007909301805461010088015163ffffffff908116600160201b0267ffffffffffffffff1990921695169490941793909317909255915281209192508690602090810291909101518254600181810185556000948552838520909101919091558883526005909152604090912090869060209081029190910151825460018082018555600094855283852090910191909155888352600682526040808420805480840182559085528385200180546001600160a01b0319166001600160a01b038e169081179091558b85526003845281852080548085018255908652848620018b9055845291819052908220805460ff191682179055905461100991611952565b6000555050505050505050565b600086815260026020818152604080842081516101208101835281548152600182015493810184905293810154918401919091526003810154606084015260048101546080840152600581015460a0840152600681015460c08401526007015463ffffffff80821660e0850152600160201b909104166101008301526110ae5760405162461bcd60e51b8152600401610379906118ef565b600088815260046020526040902054871080156110d8575060008881526005602052604090205487105b6111155760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642064657669636560901b6044820152606401610379565b600088815260046020526040812080548990811061113557611135611926565b906000526020600020015490506000600560008b8152602001908152602001600020898154811061116857611168611926565b90600052602060002001549050600060028960405160200161118a91906119ab565b60408051601f19818403018152908290526111a4916119ab565b602060405180830381855afa1580156111c1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906111e491906119c7565b604051635fe566a560e11b81526004810182905290915060009073__$6741924bfcfcb7134082f4a5db87f28da2$__9063bfcacd4a90602401600060405180830381865af415801561123a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261126291908101906119e0565b60208601519091506112b65760405162461bcd60e51b815260206004820152601b60248201527f54686520757365726e616d6520646f6573206e6f7420657869737400000000006044820152606401610379565b600060028a6002848c6040516020016112d0929190611a57565b60408051601f19818403018152908290526112ea916119ab565b602060405180830381855afa158015611307573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061132a91906119c7565b60405160200161133b929190611af7565b60408051601f1981840301815290829052611355916119ab565b602060405180830381855afa158015611372573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061139591906119c7565b604080518082018252878152602081018790529051630461ac1160e01b815291925073__$6741924bfcfcb7134082f4a5db87f28da2$__91630461ac11916113e39185918d91600401611b42565b602060405180830381865af4158015611400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114249190611b6b565b9d9c50505050505050505050505050565b80356001600160a01b038116811461144c57600080fd5b919050565b6000806040838503121561146457600080fd5b61146d83611435565b9150602083013560ff8116811461148357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114cd576114cd61148e565b604052919050565b600082601f8301126114e657600080fd5b6114f060406114a4565b80604084018581111561150257600080fd5b845b8181101561151c578035845260209384019301611504565b509095945050505050565b600080600060a0848603121561153c57600080fd5b8335925061154d85602086016114d5565b915061155c85606086016114d5565b90509250925092565b600080600080600060e0868803121561157d57600080fd5b61158686611435565b945060208601359350604086013592506115a387606088016114d5565b91506115b28760a088016114d5565b90509295509295909350565b600080604083850312156115d157600080fd5b50508035926020909101359150565b600080604083850312156115f357600080fd5b6115fc83611435565b946020939093013593505050565b6000806060838503121561161d57600080fd5b8235915061162e84602085016114d5565b90509250929050565b60006020828403121561164957600080fd5b61165282611435565b9392505050565b60006020828403121561166b57600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b8181101561151c578351805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015263ffffffff60e08201511660e085015263ffffffff61010082015116610100850152506101208301925060208401935060018101905061168c565b600080600080600080610120878903121561172b57600080fd5b61173487611435565b9550602087013594506040870135935061175188606089016114d5565b92506117608860a089016114d5565b915061176f8860e089016114d5565b90509295509295509295565b600067ffffffffffffffff8211156117955761179561148e565b50601f01601f191660200190565b60006117b66117b18461177b565b6114a4565b90508281528383830111156117ca57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126117f257600080fd5b611652838335602085016117a3565b60008060008060008060e0878903121561181a57600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561183f57600080fd5b61184b89828a016117e1565b945050606087013567ffffffffffffffff81111561186857600080fd5b8701601f8101891361187957600080fd5b611888898235602084016117a3565b935050608087013567ffffffffffffffff8111156118a557600080fd5b6118b189828a016117e1565b92505061176f8860a089016114d5565b60208082526014908201527310591b5a5b881b195d995b081c995c5d5a5c995960621b604082015260600190565b6020808252601a908201527f546865206163636f756e7420646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156119655761196561193c565b92915050565b63ffffffff81811683821601908111156119655761196561193c565b60005b838110156119a257818101518382015260200161198a565b50506000910152565b600082516119bd818460208701611987565b9190910192915050565b6000602082840312156119d957600080fd5b5051919050565b6000602082840312156119f257600080fd5b815167ffffffffffffffff811115611a0957600080fd5b8201601f81018413611a1a57600080fd5b8051611a286117b18261177b565b818152856020838501011115611a3d57600080fd5b611a4e826020830160208601611987565b95945050505050565b7f7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6781526332911d1160e11b602082015260008351611a9c816024850160208801611987565b6b11161137b934b3b4b7111d1160a11b6024918401918201528351611ac8816030840160208801611987565b75222c2263726f73734f726967696e223a66616c73657d60501b60309290910191820152604601949350505050565b60008351611b09818460208801611987565b9190910191825250602001919050565b8060005b6002811015611b3c578151845260209384019390910190600101611b1d565b50505050565b83815260a08101611b566020830185611b19565b611b636060830184611b19565b949350505050565b600060208284031215611b7d57600080fd5b8151801515811461165257600080fdfea2646970667358221220246ef13c1115d148fe4a8128b811334e6c5731dc29b40d6d094bcf9b54c4d35864736f6c634300081c0033";

type CarmelRegistry2ConstructorParams =
  | [linkLibraryAddresses: CarmelRegistry2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarmelRegistry2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class CarmelRegistry2__factory extends ContractFactory {
  constructor(...args: CarmelRegistry2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        CarmelRegistry2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CarmelRegistry2LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6741924bfcfcb7134082f4a5db87f28da2\\$__", "g"),
      linkLibraryAddresses["contracts/CarmelUtils.sol:CarmelUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CarmelRegistry2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CarmelRegistry2__factory {
    return super.connect(runner) as CarmelRegistry2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarmelRegistry2Interface {
    return new Interface(_abi) as CarmelRegistry2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CarmelRegistry2 {
    return new Contract(address, _abi, runner) as unknown as CarmelRegistry2;
  }
}

export interface CarmelRegistry2LibraryAddresses {
  ["contracts/CarmelUtils.sol:CarmelUtils"]: string;
}
