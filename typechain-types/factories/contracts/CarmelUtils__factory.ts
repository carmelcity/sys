/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CarmelUtils,
  CarmelUtilsInterface,
} from "../../contracts/CarmelUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
    ],
    name: "base64encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToBase64String",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "cleanString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_uint8",
        type: "uint8",
      },
    ],
    name: "toByte",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "validChars",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "message",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "rs",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "Q",
        type: "uint256[2]",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61180d610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80630461ac111461007157806333ce83e11461009957806390ad731f146100b9578063a86b73f0146100cc578063bfcacd4a146100f8578063d3705aa11461010b575b600080fd5b61008461007f3660046114e1565b610130565b60405190151581526020015b60405180910390f35b6100ac6100a736600461151f565b6102d1565b604051610090919061155c565b6100ac6100c736600461158f565b6103e8565b6100df6100da366004611629565b610816565b6040516001600160f81b03199091168152602001610090565b6100ac61010636600461151f565b610843565b61011e61011936600461151f565b610992565b60405160ff9091168152602001610090565b815160009015806101505750825160008051602061177883398151915211155b8061015d57506020830151155b1561016a575060006102ca565b8151602083015161017b9190610afe565b610187575060006102ca565b6000808080806101ac8860016020020151600080516020611778833981519152610bf0565b905061020a7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2967f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5600080516020611778833981519152848d09610cc0565b885160208a01518b519398509195506102389290919060008051602061177883398151915290859009610cc0565b9094509150600061024b86858786610d90565b604081015190915060000361026957600096505050505050506102ca565b600061028a8260026020020151600160601b63ffffffff60c01b0319610bf0565b9050600160601b63ffffffff60c01b0319808283098351098a519091506102bf60008051602061177883398151915283611678565b149750505050505050505b9392505050565b606060006102de83610992565b90508060ff16600003610301575050604080516020810190915260008152919050565b60008160ff1667ffffffffffffffff81111561031f5761031f611435565b6040519080825280601f01601f191660200182016040528015610349576020820181803683370190505b509050600091505b60208260ff161080156103855750838260ff16602081106103745761037461164c565b1a60f81b6001600160f81b03191615155b156102ca576000848360ff16602081106103a1576103a161164c565b1a60f81b905080828460ff16815181106103bd576103bd61164c565b60200101906001600160f81b031916908160001a9053505081806103e0906116a2565b925050610351565b805160609060009081906103fd600382611678565b156104255761040d600382611678565b6104189060036116c1565b61042290826116d4565b90505b8460008267ffffffffffffffff81111561044157610441611435565b6040519080825280601f01601f19166020018201604052801561046b576020820181803683370190505b509050600094505b81518510156104cd5781858151811061048e5761048e61164c565b602001015160f81c60f81b8186815181106104ab576104ab61164c565b60200101906001600160f81b031916908160001a905350600190940193610473565b60006104da6003856116e7565b6104e59060046116fb565b905060008167ffffffffffffffff81111561050257610502611435565b6040519080825280601f01601f19166020018201604052801561052c576020820181803683370190505b509050600096505b8487101561080a57600060028489815181106105525761055261164c565b016020015160f81c901c9050600060048561056e8b60016116d4565b8151811061057e5761057e61164c565b602001015160f81c60f81b60f81c60ff16901c6004868b815181106105a5576105a561164c565b60209101015160f81c600316901b17905060006006866105c68c60026116d4565b815181106105d6576105d661164c565b016020015160f81c901c6002876105ee8d60016116d4565b815181106105fe576105fe61164c565b60209101015160f81c600f16901b17905060008661061d8c60026116d4565b8151811061062d5761062d61164c565b602001015160f81c60f81b60f81c60ff16603f16905060405180606001604052806040815260200161179860409139848151811061066d5761066d61164c565b602001015160f81c60f81b858b8151811061068a5761068a61164c565b60200101906001600160f81b031916908160001a9053506040518060600160405280604081526020016117986040913983815181106106cb576106cb61164c565b01602001516001600160f81b031916856106e68c60016116d4565b815181106106f6576106f661164c565b60200101906001600160f81b031916908160001a9053506040518060600160405280604081526020016117986040913982815181106107375761073761164c565b01602001516001600160f81b031916856107528c60026116d4565b815181106107625761076261164c565b60200101906001600160f81b031916908160001a9053506040518060600160405280604081526020016117986040913981815181106107a3576107a361164c565b01602001516001600160f81b031916856107be8c60036116d4565b815181106107ce576107ce61164c565b60200101906001600160f81b031916908160001a9053506107f060048b6116d4565b99505050505060038761080391906116d4565b9650610534565b98975050505050505050565b6000600a8260ff1610156108385761082f826030611712565b60f81b92915050565b61082f826057611712565b6040805181815260608181018352916000918291602082018180368337019050509050600091505b80518260ff1610156109625760008461088560028561172b565b60ff16602081106108985761089861164c565b1a600f16905060006004866108ae60028761172b565b60ff16602081106108c1576108c161164c565b1a60f81b6001600160f81b031916901c60f81c90506108df81610816565b838560ff16815181106108f4576108f461164c565b60200101906001600160f81b031916908160001a905350610916846001611712565b935061092182610816565b838560ff16815181106109365761093661164c565b60200101906001600160f81b031916908160001a9053505050818061095a906116a2565b92505061086b565b61098a81604051602001610976919061174d565b6040516020818303038152906040526103e8565b949350505050565b6000805b60208160ff161080156109ca5750828160ff16602081106109b9576109b961164c565b1a60f81b6001600160f81b03191615155b156109e157806109d9816116a2565b915050610996565b60005b8160ff168160ff1611610af7576000848260ff1660208110610a0857610a0861164c565b1a60f81b9050600360fc1b6001600160f81b0319821610801590610a3a5750603960f81b6001600160f81b0319821611155b158015610a705750604160f81b6001600160f81b0319821610801590610a6e5750602d60f91b6001600160f81b0319821611155b155b8015610aa55750606160f81b6001600160f81b0319821610801590610aa35750603d60f91b6001600160f81b0319821611155b155b8015610abf5750601760f91b6001600160f81b0319821614155b8015610ad457506001600160f81b0319811615155b15610ae457506000949350505050565b5080610aef816116a2565b9150506109e4565b5092915050565b6000821580610b1a5750600160601b63ffffffff60c01b031983145b80610b23575081155b80610b3b5750600160601b63ffffffff60c01b031982145b15610b4857506000610bea565b6000600160601b63ffffffff60c01b031983840990506000600160601b63ffffffff60c01b031985600160601b63ffffffff60c01b0319878809099050600160601b63ffffffff60c01b0319806bfffffffffffffffffffffffd63ffffffff60c01b0319870982089050600160601b63ffffffff60c01b03197f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b820890501490505b92915050565b60008215801590610c015750818314155b8015610c0c57508115155b610c4d5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210373ab6b132b960911b604482015260640160405180910390fd5b6000600183825b8615610cb557610c6487836116e7565b9050828680610c7557610c75611662565b8780610c8357610c83611662565b858409610c9090896116c1565b8608909450925086610ca281836116fb565b610cac90846116c1565b97509150610c54565b509195945050505050565b60008082600003610cd8576000805b91509150610d88565b82600103610cea575083905082610d88565b82600203610cfc57610ccf8585610dc1565b50839050828181600180610d11600288611678565b600003610d2057600094508495505b600187901c96505b8615610d7457610d39848484610df0565b91955093509150610d4b600288611678565b600103610d6857610d60848484898986611044565b919750955090505b600187901c9650610d28565b610d7f868683611149565b95509550505050505b935093915050565b610d98611417565b600080610da787878787611199565b9092509050610db682826111ce565b979650505050505050565b6000806000610dd285856001610df0565b91965094509050610de4858583611149565b92509250509250929050565b6000806000806000806000610e058a8a611227565b15610e1e5760006001819650965096505050505061103b565b600160601b63ffffffff60c01b0319888a099250600160601b63ffffffff60c01b0319600284099250600160601b63ffffffff60c01b03198a84099150600160601b63ffffffff60c01b03198983099150600160601b63ffffffff60c01b0319600283099150600160601b63ffffffff60c01b03198a8b099950600160601b63ffffffff60c01b031960038b099350600160601b63ffffffff60c01b03198889099750600160601b63ffffffff60c01b03196bfffffffffffffffffffffffd63ffffffff60c01b031989099750600160601b63ffffffff60c01b03198885089350600160601b63ffffffff60c01b03198485099050600160601b63ffffffff60c01b0319826002099950600160601b63ffffffff60c01b0319610f4f8b600160601b63ffffffff60c01b03196116c1565b82089050600160601b63ffffffff60c01b0319610f7a82600160601b63ffffffff60c01b03196116c1565b83089950600160601b63ffffffff60c01b03198a85099950600160601b63ffffffff60c01b0319838a099850600160601b63ffffffff60c01b0319898a099850600160601b63ffffffff60c01b0319896002099850600160601b63ffffffff60c01b0319610ff68a600160601b63ffffffff60c01b03196116c1565b8b089550600160601b63ffffffff60c01b03198184099650600160601b63ffffffff60c01b03198384099450600160601b63ffffffff60c01b03198386099450505050505b93509350939050565b60008060008060008060006110598d8d611227565b15611070578989899650965096505050505061113d565b61107a8a8a611227565b15611091578c8c8c9650965096505050505061113d565b600160601b63ffffffff60c01b0319888d099350600160601b63ffffffff60c01b03198b8a099250600160601b63ffffffff60c01b0319888e099150600160601b63ffffffff60c01b03198b8b09905080820361111357828403611109576110fa8d8d8d610df0565b9650965096505050505061113d565b60006001816110fa565b611131600160601b63ffffffff60c01b0319898d098383868861124b565b91985096509450505050505b96509650969350505050565b600080600061116684600160601b63ffffffff60c01b0319610bf0565b9050600160601b63ffffffff60c01b03198187099250600160601b63ffffffff60c01b0319818609915050935093915050565b60008060006111ae8787600188886001611044565b919850965090506111c0878783611149565b925092505094509492505050565b6111d6611417565b600160601b63ffffffff60c01b0319600160000860408201819052600160601b63ffffffff60c01b031990840981526040810151600160601b63ffffffff60c01b0319908309602082015292915050565b600082158015611235575081155b1561124257506001610bea565b50600092915050565b600080808080808080600160601b63ffffffff60c01b031961127b8b600160601b63ffffffff60c01b03196116c1565b8a089050600160601b63ffffffff60c01b03196112a68c600160601b63ffffffff60c01b03196116c1565b8d089450600160601b63ffffffff60c01b03198586099350600160601b63ffffffff60c01b03198182099150600160601b63ffffffff60c01b03198d83099150600160601b63ffffffff60c01b03198c8c089a50600160601b63ffffffff60c01b0319848c099a50600160601b63ffffffff60c01b03196113358c600160601b63ffffffff60c01b03196116c1565b83089150600160601b63ffffffff60c01b03198286099750600160601b63ffffffff60c01b03198585099250600160601b63ffffffff60c01b0319848d099b50600160601b63ffffffff60c01b031961139c83600160601b63ffffffff60c01b03196116c1565b8d089b50600160601b63ffffffff60c01b03198c82099050600160601b63ffffffff60c01b0319838a099850600160601b63ffffffff60c01b03196113ef8a600160601b63ffffffff60c01b03196116c1565b82089650600160601b63ffffffff60c01b03198d840995505050505050955095509592505050565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561147457611474611435565b604052919050565b600082601f83011261148d57600080fd5b6040805190810167ffffffffffffffff811182821017156114b0576114b0611435565b80604052508060408401858111156114c757600080fd5b845b81811015610cb55780358352602092830192016114c9565b600080600060a084860312156114f657600080fd5b83359250611507856020860161147c565b9150611516856060860161147c565b90509250925092565b60006020828403121561153157600080fd5b5035919050565b60005b8381101561155357818101518382015260200161153b565b50506000910152565b602081526000825180602084015261157b816040850160208701611538565b601f01601f19169190910160400192915050565b6000602082840312156115a157600080fd5b813567ffffffffffffffff8111156115b857600080fd5b8201601f810184136115c957600080fd5b803567ffffffffffffffff8111156115e3576115e3611435565b6115f6601f8201601f191660200161144b565b81815285602083850101111561160b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60006020828403121561163b57600080fd5b813560ff811681146102ca57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261168757611687611662565b500690565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036116b8576116b861168c565b60010192915050565b81810381811115610bea57610bea61168c565b80820180821115610bea57610bea61168c565b6000826116f6576116f6611662565b500490565b8082028115828204841417610bea57610bea61168c565b60ff8181168382160190811115610bea57610bea61168c565b600060ff83168061173e5761173e611662565b8060ff84160491505092915050565b61060f60f31b81526000825161176a816002850160208701611538565b919091016002019291505056feffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc6325514142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5fa26469706673582212204eb89b7b7bee516666f693a8806c8aac4d10c8cb7e8891d426deeaa818215df164736f6c634300081c0033";

type CarmelUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarmelUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CarmelUtils__factory extends ContractFactory {
  constructor(...args: CarmelUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CarmelUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CarmelUtils__factory {
    return super.connect(runner) as CarmelUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarmelUtilsInterface {
    return new Interface(_abi) as CarmelUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CarmelUtils {
    return new Contract(address, _abi, runner) as unknown as CarmelUtils;
  }
}
